<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>sideproject</title><link href="/" rel="alternate"></link><link href="/feeds/mnath.atom.xml" rel="self"></link><id>/</id><updated>2013-07-01T00:00:00-04:00</updated><entry><title>How I setup Pelican</title><link href="/posts/2013/07/pelican-setup/" rel="alternate"></link><updated>2013-07-01T00:00:00-04:00</updated><author><name>mnath</name></author><id>tag:,2013-07-01:posts/2013/07/pelican-setup/</id><summary type="html">&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;

&lt;div id="wrapper" style="width:100%; text-align:center"&gt;
    &lt;img src="http://terriyu.info/blog/static/images/pelican-800px.png" alt="Pelican logo and Github account" /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;I thought it would be useful to go into greater technical detail about how I
went about setting up Pelican.&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;My machine is running Ubuntu 12.04 LTS.&lt;/p&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;Summary:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install Pelican and its dependencies in a virtual environment.  &lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;pelican-quick-start&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;Fork the &lt;a href="https://github.com/getpelican/pelican-themes"&gt;Pelican themes&lt;/a&gt; and
   &lt;a href="https://github.com/getpelican/pelican-plugins"&gt;Pelican plugins&lt;/a&gt; on GitHub
   and clone the forks onto my local machine.  &lt;/li&gt;
&lt;li&gt;Modify Pelican themes to my taste.  I modified the bootstrap theme.&lt;/li&gt;
&lt;li&gt;Make additional directories inside &lt;code&gt;content&lt;/code&gt; directory.&lt;/li&gt;
&lt;li&gt;Modify settings in &lt;code&gt;pelicanconf.py&lt;/code&gt; and &lt;code&gt;publishconf.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Setup &lt;a href="http://www.google.com/analytics/"&gt;Google Analytics&lt;/a&gt;/&lt;a href="http://piwik.org/"&gt;Piwik&lt;/a&gt; 
   and &lt;a href="http://disqus.com/"&gt;Disqus&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Demonstration&lt;/h2&gt;
&lt;p&gt;If you'd like to see some of Pelican's features in action
(Markdown, formatting, $\LaTeX$, etc.), see my earlier post on
&lt;a href="|filename|pelican-demo.md"&gt;demonstrating Pelican&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Installing Pelican and dependencies&lt;/h2&gt;
&lt;p&gt;To install Pelican and other Python package dependencies in a virtual 
environment, I followed the instructions in the official 
&lt;a href="http://docs.getpelican.com/en/3.2/getting_started.html#installing-pelican"&gt;Pelican documentation&lt;/a&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; virtualenv ~/virtualenvs/pelican
&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; ~/virtualenvs/pelican
&lt;span class="gp"&gt;$&lt;/span&gt; . bin/activate
&lt;span class="gp"&gt;$&lt;/span&gt; pip install pelican
&lt;span class="gp"&gt;$&lt;/span&gt; pip install Markdown
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Don't use &lt;code&gt;sudo pip&lt;/code&gt; when installing these Python packages in a virtual 
environment, otherwise you'll end up installing them globally which defeats the 
purpose of using virtual environments.&lt;/p&gt;
&lt;p&gt;I wanted to use &lt;a href="http://daringfireball.net/projects/markdown"&gt;Markdown&lt;/a&gt; to write
my blog posts, so I needed to install the Python Markdown package in the last
line.  By default, Pelican uses a 
&lt;a href="http://pythonhosted.org/Markdown/extensions/extra.html"&gt;flavor of Markdown&lt;/a&gt;
that mostly follows 
&lt;a href="http://michelf.ca/projects/php-markdown/extra/"&gt;PHP Markdown Extra&lt;/a&gt;.  I
especially like using the 
&lt;a href="http://pythonhosted.org/Markdown/extensions/footnotes.html"&gt;footnotes extension&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After you're done working with Pelican, you can leave the virtual environment
with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; deactivate
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Running pelican-quickstart&lt;/h2&gt;
&lt;p&gt;Here are the configuration options I used for &lt;code&gt;pelican-quickstart&lt;/code&gt;.  The details
for SSH upload have been anonymized for security reasons.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pelican-quickstart
&lt;span class="go"&gt;Welcome to pelican-quickstart v3.2.2.&lt;/span&gt;

&lt;span class="go"&gt;This script will help you create a new Pelican-based website.&lt;/span&gt;

&lt;span class="go"&gt;Please answer the following questions so this script can generate the files&lt;/span&gt;
&lt;span class="go"&gt;needed by Pelican.&lt;/span&gt;

&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; Where &lt;span class="k"&gt;do &lt;/span&gt;you want to create your new web site? &lt;span class="o"&gt;[&lt;/span&gt;.&lt;span class="o"&gt;]&lt;/span&gt; blog
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; What will be the title of this web site? terriyu@/media/blog 
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; Who will be the author of this web site? Terri Yu 
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; What will be the default language of this web site? &lt;span class="o"&gt;[&lt;/span&gt;en&lt;span class="o"&gt;]&lt;/span&gt; 
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; Do you want to specify a URL prefix? e.g., http://example.com   &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; Y
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; What is your URL prefix? &lt;span class="o"&gt;(&lt;/span&gt;see above example; no trailing slash&lt;span class="o"&gt;)&lt;/span&gt; http://terriyu.info
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; Do you want to &lt;span class="nb"&gt;enable &lt;/span&gt;article pagination? &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; Y
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; How many articles per page &lt;span class="k"&gt;do &lt;/span&gt;you want? &lt;span class="o"&gt;[&lt;/span&gt;10&lt;span class="o"&gt;]&lt;/span&gt; 
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; Do you want to generate a Makefile to easily manage your website? &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; Y
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; Do you want an auto-reload &amp;amp; simpleHTTP script to assist with theme and site development? &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; Y
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; Do you want to upload your website using FTP? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; N
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; Do you want to upload your website using SSH? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; Y
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; What is the hostname of your SSH server? &lt;span class="o"&gt;[&lt;/span&gt;localhost&lt;span class="o"&gt;]&lt;/span&gt; ip.add.ress
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; What is the port of your SSH server? &lt;span class="o"&gt;[&lt;/span&gt;22&lt;span class="o"&gt;]&lt;/span&gt; 
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; What is your username on that server? &lt;span class="o"&gt;[&lt;/span&gt;root&lt;span class="o"&gt;]&lt;/span&gt; username 
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; Where &lt;span class="k"&gt;do &lt;/span&gt;you want to put your web site on that server? &lt;span class="o"&gt;[&lt;/span&gt;/var/www&lt;span class="o"&gt;]&lt;/span&gt; /somedirectory 
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; Do you want to upload your website using Dropbox? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; N
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; Do you want to upload your website using S3? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; N
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I enabled article pagination so that I didn't end up with all the posts on a
single page.  The &lt;code&gt;Makefile&lt;/code&gt; is incredibly useful, so I enabled that.  It allows
you to compile the website with &lt;code&gt;make html&lt;/code&gt; or &lt;code&gt;make devserver&lt;/code&gt;.  Usually, when
I want to test my website, I run &lt;code&gt;make clean&lt;/code&gt; (to delete any previously 
generated files), followed by &lt;code&gt;make devserver&lt;/code&gt; to run a fake server on my local
machine.  I find that &lt;code&gt;make devserver&lt;/code&gt; is a better simulation of the website
than &lt;code&gt;make html&lt;/code&gt;.  I'm not sure what the auto-reload &amp;amp; simpleHTTP script is, but
I enabled it just in case.&lt;/p&gt;
&lt;p&gt;When I'm ready to upload my content to the web host, there are a variety of 
options.  I don't enable FTP upload because it's not very secure.  I try to
stick with some transfer method that uses SSH.  You can use &lt;code&gt;make ssh_upload&lt;/code&gt;
which works fine, but I prefer &lt;code&gt;make rsync_upload&lt;/code&gt; which uploads using &lt;code&gt;rsync&lt;/code&gt;
and SSH.  Unlike &lt;code&gt;make ssh_upload&lt;/code&gt; which uses &lt;code&gt;scp&lt;/code&gt; and uploads everything, the 
&lt;code&gt;rsync&lt;/code&gt; command only sends incremental changes, which makes your data transfer 
much more efficient. &lt;/p&gt;
&lt;p&gt;All the &lt;code&gt;make&lt;/code&gt; commands have to be run in the same directory as the &lt;code&gt;Makefile&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Fork and clone the GitHub repos for pelican-themes and pelican-plugins&lt;/h2&gt;
&lt;p&gt;I wanted to modify the official 
&lt;a href="https://github.com/getpelican/pelican-themes"&gt;Pelican themes&lt;/a&gt; and 
&lt;a href="https://github.com/getpelican/pelican-plugins"&gt;Pelican plugins&lt;/a&gt;, and have them
under version control, so I performed the standard procedure of forking the 
GitHub repos and cloning the forks.  My procedure was very similar to the
&lt;a href="https://help.github.com/articles/fork-a-repo"&gt;GitHub help page&lt;/a&gt; except I cloned
using the SSH address rather than the https address.&lt;/p&gt;
&lt;h2&gt;Modify Pelican theme to taste&lt;/h2&gt;
&lt;p&gt;I am using the bootstrap theme.  I modified it in the following way:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Modified &lt;code&gt;static/bootstrap.min.css&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;Increased font size and line height&lt;/li&gt;
&lt;li&gt;Changed sizes and alignment of top bar, sidebar, and content&lt;/li&gt;
&lt;li&gt;Eliminated line in page header&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Modified &lt;code&gt;bootstrap/static/local.css&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;Changed icons to use 
  &lt;a href="http://fortawesome.github.io/Font-Awesome/"&gt;Font Awesome&lt;/a&gt;'s set&lt;/li&gt;
&lt;li&gt;Changed alignment of icons&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Modified &lt;code&gt;static/pygments.css&lt;/code&gt; to use the perldoc colors by
  &lt;a href="http://pygments.org/docs/cmdline/#generating-styles"&gt;generating a CSS stylesheet&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Added code to &lt;code&gt;templates/article.html&lt;/code&gt; for neighboring links.  This means that
  if you are on a post, you will see a link for the previous post and a link
  for the next post.  You need to enable the 
  &lt;a href="https://github.com/getpelican/pelican-plugins/tree/master/neighbors"&gt;neighbors plugin&lt;/a&gt; 
  for this to work. &lt;/li&gt;
&lt;li&gt;Modified &lt;code&gt;templates/base.html&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;Added code for including $\LaTeX$.  For this to work, you need to enable
  the &lt;a href="https://github.com/getpelican/pelican-plugins/tree/master/latex"&gt;latex plugin&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Added code for including Piwik content&lt;/li&gt;
&lt;li&gt;Altered sidebar links&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Modified &lt;code&gt;templates/index.html&lt;/code&gt; to change look of the more... link in the 
  summaries, got rid of the permalink line, and added the date before each post 
  title&lt;/li&gt;
&lt;li&gt;Modified &lt;code&gt;templates/metadata.html&lt;/code&gt; to use the variable &lt;code&gt;article.locale_date&lt;/code&gt;
  instead of &lt;code&gt;article.date&lt;/code&gt; so that it uses my &lt;code&gt;DEFAULT_DATE_FORMAT&lt;/code&gt; variable
  in &lt;code&gt;pelicanconf.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;templates/piwik.html&lt;/code&gt; (copied from bootstrap2 theme) for Piwik support&lt;/li&gt;
&lt;li&gt;Modified &lt;code&gt;templates/tags.html&lt;/code&gt; to sort tags in alphabetical order &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To sort tags in alphabetical order, use&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;articles&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Make additional directories inside content directory&lt;/h2&gt;
&lt;p&gt;I made directories &lt;code&gt;2013&lt;/code&gt;, &lt;code&gt;images&lt;/code&gt;, and &lt;code&gt;pages&lt;/code&gt; in the &lt;code&gt;content&lt;/code&gt; 
directory.  This is the way I organized my content.  Posts in 2013 go into 
&lt;code&gt;2013&lt;/code&gt;, photos go into &lt;code&gt;images&lt;/code&gt;, and special non-chronological content goes into 
&lt;code&gt;pages&lt;/code&gt;.  I plan to make a new directory for each year and it would contain the 
posts for that particular year.  The only directory that has to have a specific 
name is &lt;code&gt;pages&lt;/code&gt;.  Pelican treats this name as special.  My 
&lt;a href="/"&gt;About page&lt;/a&gt; is contained inside the directory 
&lt;code&gt;pages&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For more information about the file hierarchy, see the 
&lt;a href="http://docs.getpelican.com/en/3.2/getting_started.html#kickstart-your-site"&gt;Pelican documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Modify settings in pelicanconf.py and publishconf.py&lt;/h2&gt;
&lt;p&gt;This is my &lt;code&gt;pelicanconf.py&lt;/code&gt; file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;

&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;Terri Yu&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;terriyu@/media/blog&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;America/New_York&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;en&amp;#39;&lt;/span&gt;

&lt;span class="c"&gt;# Feed generation is usually not desired when developing&lt;/span&gt;
&lt;span class="n"&gt;FEED_ALL_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;TRANSLATION_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;

&lt;span class="c"&gt;# Feeds &lt;/span&gt;
&lt;span class="n"&gt;FEEDS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;All posts&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;feeds/all.atom.xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Category&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;feeds/category&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;OPW&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;feeds/tag/opw.atom.xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="c"&gt;# Social widget&lt;/span&gt;
&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Github&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;https://github.com/terriyu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Twitter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;https://twitter.com/terrimyu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Linkedin&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;https://linkedin.com/in/terriyu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="c"&gt;# Uncomment following line if you want document-relative URLs when developing&lt;/span&gt;
&lt;span class="n"&gt;RELATIVE_URLS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="c"&gt;# Formatting for dates&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_DATE_FORMAT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;%a &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt; %B %Y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Formatting for urls&lt;/span&gt;

&lt;span class="n"&gt;ARTICLE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;posts/{date:%Y}/{date:%m}/{slug}/&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;ARTICLE_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;posts/{date:%Y}/{date:%m}/{slug}/index.html&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;CATEGORY_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;category/{slug}&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;category/{slug}/index.html&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;TAG_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tag/{slug}/&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;TAG_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tag/{slug}/index.html&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Generate yearly archive&lt;/span&gt;

&lt;span class="n"&gt;YEAR_ARCHIVE_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;posts/{date:%Y}/index.html&amp;#39;&lt;/span&gt;

&lt;span class="c"&gt;# Show most recent posts first&lt;/span&gt;

&lt;span class="n"&gt;NEWEST_FIRST_ARCHIVES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;

&lt;span class="c"&gt;# Specify theme&lt;/span&gt;

&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/home/terri/pelican/pelican-themes/bootstrap&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Plugins&lt;/span&gt;

&lt;span class="n"&gt;PLUGIN_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;/home/terri/pelican/pelican-plugins&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;latex&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;neighbors&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;summary&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c"&gt;# Only use LaTeX for selected articles&lt;/span&gt;

&lt;span class="n"&gt;LATEX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;article&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The configuration file is mostly self-explanatory.  I uncommented the line for
relative URLs.  I also specified custom URLs for article, category, tag, and
year archive, so that the URLs are more concise and don't have any &lt;code&gt;.html&lt;/code&gt;
extension.  For example, instead of &lt;code&gt;posts/2013/06/pelican-setup.html&lt;/code&gt;, I would
have &lt;code&gt;posts/2013/06/pelican-setup/&lt;/code&gt;.  I added lines to show most recent posts
first and to use the &lt;code&gt;bootstrap&lt;/code&gt; theme.  I also enabled the &lt;code&gt;latex&lt;/code&gt;, 
&lt;code&gt;neighbors&lt;/code&gt;, and &lt;code&gt;summary&lt;/code&gt; plugins.  The line &lt;code&gt;LATEX = 'article'&lt;/code&gt; allows you to 
turn on $\LaTeX$ support by adding the line &lt;code&gt;Latex:&lt;/code&gt; in the head of a post.  I
like using the &lt;code&gt;summary&lt;/code&gt; plugin&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; because I can control exactly how much of each
post is shown on the index page by using markers.  Also, if I set the 
&lt;code&gt;&amp;lt;!-- PELICAN_END_SUMMARY --&amp;gt;&lt;/code&gt; marker before footnotes, then I avoid the
&lt;a href="https://github.com/getpelican/pelican/pull/885"&gt;bug where footnotes appear in the summary&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Below is my &lt;code&gt;publishconf.py&lt;/code&gt; file with the Disqus and Google Analytics 
specifics anonymized.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;

&lt;span class="c"&gt;# This file is only used if you use `make publish` or&lt;/span&gt;
&lt;span class="c"&gt;# explicitly specify it as your config file.&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;curdir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pelicanconf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://terriyu.info/blog&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;RELATIVE_URLS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;

&lt;span class="n"&gt;FEED_ALL_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;feeds/all.atom.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;feeds/category/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;.atom.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;TAG_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;feeds/tag/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;.atom.xml&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DELETE_OUTPUT_DIRECTORY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="c"&gt;# Following items are often useful when publishing&lt;/span&gt;

&lt;span class="n"&gt;DISQUS_SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;disqus-sitename&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;GOOGLE_ANALYTICS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;google-analytics-id&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;PIWIK_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;url.where.piwik.install.is.located&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;#PIWIK_SSL_URL = &amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;PIWIK_SITE_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I mostly kept the default file, but added a tag feed.&lt;/p&gt;
&lt;h2&gt;Setup Google Analytics/Piwik and Disqus&lt;/h2&gt;
&lt;p&gt;Just go to the relevant website 
&lt;a href="http://www.google.com/analytics/"&gt;Google Analytics&lt;/a&gt;, 
&lt;a href="http://piwik.org/"&gt;Piwik&lt;/a&gt;, or &lt;a href="http://disqus.com/"&gt;Disqus&lt;/a&gt; and follow the
directions on how to set it up.  Then add the appropriate IDs to your 
&lt;code&gt;publishconf.py&lt;/code&gt; file (see my example file from the last section).  Piwik needs 
to be installed on a server.  The major web hosts 
&lt;a href="http://www.bluehost.com/"&gt;Bluehost&lt;/a&gt; and &lt;a href="http://dreamhost.com/"&gt;Dreamhost&lt;/a&gt; 
support one-click Piwik installs.  Or, if you have a friend who is willing to 
share their Piwik install with you, that also works.  The variable 
&lt;code&gt;PIWIK_SSL_URL&lt;/code&gt; is for extra security and optional.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Top image taken from &lt;a href="https://github.com/getpelican/"&gt;Pelican GitHub page&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;Currently, there is an incompatibility between the &lt;code&gt;summary&lt;/code&gt; plugin and 
  the version 3.2 release of the Pelican package.  The &lt;code&gt;summary&lt;/code&gt; plugin in the
  &lt;a href="https://github.com/getpelican/pelican-plugins"&gt;pelican-plugins GitHub repository&lt;/a&gt;
  has been updated to be consistent with the development version of
  Pelican.  Therefore, if you try to use the latest &lt;code&gt;summary&lt;/code&gt; plugin from 
  the GitHub repo with Pelican v3.2, you'll get an error related to the
  &lt;code&gt;DEFAULT_CONFIG&lt;/code&gt; variable.  To fix this, go into your cloned Git
  repo of &lt;code&gt;pelican-plugins&lt;/code&gt; and manually change the code in 
  &lt;code&gt;summary/summary.py&lt;/code&gt;.  Simply replace &lt;code&gt;DEFAULT_CONFIG&lt;/code&gt; with 
  &lt;code&gt;_DEFAULT_CONFIG&lt;/code&gt; in the file.  See this 
  &lt;a href="https://github.com/getpelican/pelican-plugins/pull/33/files"&gt;pull request&lt;/a&gt;
  for reference.&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="webdev"></category></entry></feed>